package nl.tijsbeek.torchcraftexcelmod.Event;import net.minecraft.client.Minecraft;import net.minecraft.util.text.StringTextComponent;import net.minecraftforge.client.event.ClientChatEvent;import net.minecraftforge.eventbus.api.Event;import net.minecraftforge.eventbus.api.SubscribeEvent;import net.minecraftforge.fml.common.Mod;import nl.tijsbeek.torchcraftexcelmod.Excel.Excel;import nl.tijsbeek.torchcraftexcelmod.torchcraftexcelmod;import javax.swing.filechooser.FileSystemView;import java.io.IOException;import static nl.tijsbeek.torchcraftexcelmod.Mod.Stock.*;@Mod.EventBusSubscriber(modid = torchcraftexcelmod.MOD_ID, bus = Mod.EventBusSubscriber.Bus.FORGE)public class ChatEvent extends Event {    @SubscribeEvent    public static void ChatEvent(ClientChatEvent event) throws IOException {        Excel excel = new Excel();        switch (event.getMessage().toLowerCase()) {            case "?help":                event.setCanceled(true);                Minecraft.getInstance().player.sendMessage(new StringTextComponent("\n" +                        "?Start to start the calculations \n" +                        "?Stop to stop the calculations\n" +                        "?Clear to clear the saved items\n" +                        "?Test for debugging purposes when the mod is not working\n" +                        "?InventoryWorth print what your inventory is worth atm\n" +                        "?ExportExcel Export the values to a excel file.\n" +                        "?ImportExcel Import the values of the prices.\n" +                        "?Prices to see the prices to check or the import worked."));                break;            case "?start":                event.setCanceled(true);                startCalculationsInt = 1;                Minecraft.getInstance().player.sendMessage(new StringTextComponent("Calculations have started"));                break;            case "?stop":                event.setCanceled(true);                startCalculationsInt = 0;                Minecraft.getInstance().player.sendMessage(new StringTextComponent("Calculations have stopped"));                clearInventory();                break;            case "?clear":                event.setCanceled(true);                Minecraft.getInstance().player.sendMessage(new StringTextComponent("Stock.java is being cleared"));                clearInventory();                Minecraft.getInstance().player.sendMessage(new StringTextComponent("Stock.java is cleared!"));                break;            case "?test":                event.setCanceled(true);                Minecraft.getInstance().player.sendMessage(new StringTextComponent("Should return 0: " + itemAmountInventory.get("STONE") + " Should return 1.1: " + itemPriceDataBase.get("STONE")));                Minecraft.getInstance().player.sendMessage(new StringTextComponent("Should return amount gold blocks in inventory: " + itemAmountInventory.get("GOLD_BLOCK") + " Should return 92.0: " + itemPriceDataBase.get("GOLD_BLOCK")));                break;            case "?inventoryworth":                event.setCanceled(true);                Minecraft.getInstance().player.sendMessage(new StringTextComponent("Inventoryworth: " + getInventoryWorth()));                break;            case "?exportexcel":                event.setCanceled(true);                excel.excelExport();                Minecraft.getInstance().player.sendMessage(new StringTextComponent("Exporting to Excel.."));                Minecraft.getInstance().player.sendMessage(new StringTextComponent("Exporting done."));                break;            case "?importexcel":                event.setCanceled(true);                Minecraft.getInstance().player.sendMessage(new StringTextComponent("Importing to Excel.."));                Minecraft.getInstance().player.sendMessage(new StringTextComponent("Importing done."));                excel.importExcel();                break;            case "?prices":                event.setCanceled(true);                itemOrderedKeys.forEach((value) -> {                    Minecraft.getInstance().player.sendMessage(new StringTextComponent(value + " price: " + itemPriceDataBase.get(value)));                });                break;        }    }}